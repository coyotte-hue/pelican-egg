{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "name": "SCUM",
    "author": "",
    "exported_at": "2025-06-19T16:17:23+00:00",
    "description": "SCUM is the hardest and most realistic open world survival game, where every aspect of survival is done in important details. From inventory management, weapon maintenance, stamina management to the most detailed metabolism system ever created in a video game. Think you have what it takes? Deploy on the island and find out!",
    "features": [
        "steam_disk_space"
    ],
    "docker_images": {
        "ghcr.io\/ptero-eggs\/yolks:wine_latest": "ghcr.io\/ptero-eggs\/yolks:wine_latest"
    },
    "file_denylist": [],
    "startup": "wine64 .\/SCUM\/Binaries\/Win64\/SCUMServer.exe -Port={{SERVER_PORT}} -QueryPort={{QUERY_PORT}} -MaxPlayers={{MAX_PLAYERS}} & tail -c0 -F .\/SCUM\/Saved\/Logs\/SCUM.log --pid=$!",
    "config": {
        "files": "{\r\n    \"SCUM\/Saved\/Config\/WindowsServer\/ServerSettings.ini\": {\r\n        \"parser\": \"ini\",\r\n        \"find\": {\r\n            \"General.[scum.ServerName]\": \"{{server.build.env.SERVER_NAME}}\",\r\n            \"General.[scum.ServerDescription]\": \"{{server.build.env.SERVER_DESCRIPTION}}\",\r\n            \"General.[scum.ServerPassword]\": \"{{server.build.env.SERVER_PASSWORD}}\",\r\n            \"General.[scum.ServerPlaystyle]\": \"{{server.build.env.SERVER_PLAYSTYLE}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Config entry: GameID scum\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n\r\nif [[ \"${STEAM_USER}\" == \"\" ]] || [[ \"${STEAM_PASS}\" == \"\" ]]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nelse\r\n    echo -e \"user set to ${STEAM_USER}\"\r\nfi\r\n\r\ncd \/tmp\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\nmkdir -p \/mnt\/server\/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd \/mnt\/server\/steamcmd\r\n\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/serve\r\n\r\n## install game using steamcmd\r\n.\/steamcmd.sh +force_install_dir \/mnt\/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) +app_update ${SRCDS_APPID} $( [[ -z ${SRCDS_BETAID} ]] || printf %s \"-beta ${SRCDS_BETAID}\" ) $( [[ -z ${SRCDS_BETAPASS} ]] || printf %s \"-betapassword ${SRCDS_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit ## other flags may be needed depending on install. looking at you cs 1.6\r\n\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n\r\n## install end\r\necho \"-----------------------------------------\"\r\necho \"Installation completed...\"\r\necho \"-----------------------------------------\"",
            "container": "ghcr.io\/ptero-eggs\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Server Name",
            "description": "",
            "env_variable": "SERVER_NAME",
            "default_value": "A Pterodactyl Hosted Server",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:50",
            "field_type": "text"
        },
        {
            "name": "Server Description",
            "description": "",
            "env_variable": "SERVER_DESCRIPTION",
            "default_value": "A Pterodactyl Hosted Server",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Server Password",
            "description": "",
            "env_variable": "SERVER_PASSWORD",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:30",
            "field_type": "text"
        },
        {
            "name": "Max Players",
            "description": "Player limit",
            "env_variable": "MAX_PLAYERS",
            "default_value": "64",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "Server Playstyle",
            "description": "PVP or PVE",
            "env_variable": "SERVER_PLAYSTYLE",
            "default_value": "PVP",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|in:PVE,PVP",
            "field_type": "text"
        },
        {
            "name": "App ID",
            "description": "",
            "env_variable": "SRCDS_APPID",
            "default_value": "3792580",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|in:3792580",
            "field_type": "text"
        },
        {
            "name": "Auto Update",
            "description": "Enable automatic updates on server start",
            "env_variable": "AUTO_UPDATE",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "Windows",
            "description": "",
            "env_variable": "WINDOWS_INSTALL",
            "default_value": "1",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "WINETRICKS_RUN",
            "description": "",
            "env_variable": "WINETRICKS_RUN",
            "default_value": "vcrun2022 dotnet35",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Wine Debug",
            "description": "",
            "env_variable": "WINEDEBUG",
            "default_value": "-all",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Query Port",
            "description": "",
            "env_variable": "QUERY_PORT",
            "default_value": "27015",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|integer|between:1024,65535",
            "field_type": "text"
        }
    ]
}